/* eslint-disable */
"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/ExecuteRequestBody","definitions":{"ExecuteRequestBody":{"type":"object","properties":{"apiId":{"$ref":"#/definitions/UuidSchema"},"apiName":{"type":"string"},"viewMode":{"type":"boolean"},"params":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{}},"required":["key"],"additionalProperties":false}},"relays":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"string"}},"body":{"type":"array","items":{}},"query":{"type":"array","items":{}}},"required":["headers","body","query"],"additionalProperties":false}},"required":["apiId","apiName","viewMode","params","relays"],"additionalProperties":false},"UuidSchema":{"type":"string","format":"uuid"}}};const schema12 = {"type":"object","properties":{"apiId":{"$ref":"#/definitions/UuidSchema"},"apiName":{"type":"string"},"viewMode":{"type":"boolean"},"params":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{}},"required":["key"],"additionalProperties":false}},"relays":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"string"}},"body":{"type":"array","items":{}},"query":{"type":"array","items":{}}},"required":["headers","body","query"],"additionalProperties":false}},"required":["apiId","apiName","viewMode","params","relays"],"additionalProperties":false};const schema13 = {"type":"string","format":"uuid"};const formats0 = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((data.apiId === undefined) && (missing0 = "apiId")) || ((data.apiName === undefined) && (missing0 = "apiName"))) || ((data.viewMode === undefined) && (missing0 = "viewMode"))) || ((data.params === undefined) && (missing0 = "params"))) || ((data.relays === undefined) && (missing0 = "relays"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((key0 === "apiId") || (key0 === "apiName")) || (key0 === "viewMode")) || (key0 === "params")) || (key0 === "relays"))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.apiId !== undefined){let data0 = data.apiId;const _errs2 = errors;const _errs3 = errors;if(typeof data0 !== "string"){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "number" || dataType0 == "boolean"){coerced0 = "" + data0;}else if(data0 === null){coerced0 = "";}else {validate11.errors = [{instancePath:instancePath+"/apiId",schemaPath:"#/definitions/UuidSchema/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["apiId"] = coerced0;}}}if(errors === _errs3){if(errors === _errs3){if(typeof data0 === "string"){if(!(formats0.test(data0))){validate11.errors = [{instancePath:instancePath+"/apiId",schemaPath:"#/definitions/UuidSchema/format",keyword:"format",params:{format: "uuid"},message:"must match format \""+"uuid"+"\""}];return false;}}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.apiName !== undefined){let data1 = data.apiName;const _errs5 = errors;if(typeof data1 !== "string"){let dataType1 = typeof data1;let coerced1 = undefined;if(!(coerced1 !== undefined)){if(dataType1 == "number" || dataType1 == "boolean"){coerced1 = "" + data1;}else if(data1 === null){coerced1 = "";}else {validate11.errors = [{instancePath:instancePath+"/apiName",schemaPath:"#/properties/apiName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced1 !== undefined){data1 = coerced1;if(data !== undefined){data["apiName"] = coerced1;}}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.viewMode !== undefined){let data2 = data.viewMode;const _errs7 = errors;if(typeof data2 !== "boolean"){let coerced2 = undefined;if(!(coerced2 !== undefined)){if(data2 === "false" || data2 === 0 || data2 === null){coerced2 = false;}else if(data2 === "true" || data2 === 1){coerced2 = true;}else {validate11.errors = [{instancePath:instancePath+"/viewMode",schemaPath:"#/properties/viewMode/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}if(coerced2 !== undefined){data2 = coerced2;if(data !== undefined){data["viewMode"] = coerced2;}}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.params !== undefined){let data3 = data.params;const _errs9 = errors;if(errors === _errs9){if(Array.isArray(data3)){var valid2 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){let data4 = data3[i0];const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing1;if((data4.key === undefined) && (missing1 = "key")){validate11.errors = [{instancePath:instancePath+"/params/" + i0,schemaPath:"#/properties/params/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs13 = errors;for(const key1 in data4){if(!((key1 === "key") || (key1 === "value"))){validate11.errors = [{instancePath:instancePath+"/params/" + i0,schemaPath:"#/properties/params/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs13 === errors){if(data4.key !== undefined){let data5 = data4.key;if(typeof data5 !== "string"){let dataType3 = typeof data5;let coerced3 = undefined;if(!(coerced3 !== undefined)){if(dataType3 == "number" || dataType3 == "boolean"){coerced3 = "" + data5;}else if(data5 === null){coerced3 = "";}else {validate11.errors = [{instancePath:instancePath+"/params/" + i0+"/key",schemaPath:"#/properties/params/items/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced3 !== undefined){data5 = coerced3;if(data4 !== undefined){data4["key"] = coerced3;}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/params/" + i0,schemaPath:"#/properties/params/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs11 === errors;if(!valid2){break;}}}else {validate11.errors = [{instancePath:instancePath+"/params",schemaPath:"#/properties/params/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.relays !== undefined){let data6 = data.relays;const _errs16 = errors;if(errors === _errs16){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){let missing2;if((((data6.headers === undefined) && (missing2 = "headers")) || ((data6.body === undefined) && (missing2 = "body"))) || ((data6.query === undefined) && (missing2 = "query"))){validate11.errors = [{instancePath:instancePath+"/relays",schemaPath:"#/properties/relays/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs18 = errors;for(const key2 in data6){if(!(((key2 === "headers") || (key2 === "body")) || (key2 === "query"))){validate11.errors = [{instancePath:instancePath+"/relays",schemaPath:"#/properties/relays/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs18 === errors){if(data6.headers !== undefined){let data7 = data6.headers;const _errs19 = errors;if(errors === _errs19){if(Array.isArray(data7)){var valid5 = true;const len1 = data7.length;for(let i1=0; i1<len1; i1++){let data8 = data7[i1];const _errs21 = errors;if(typeof data8 !== "string"){let dataType4 = typeof data8;let coerced4 = undefined;if(!(coerced4 !== undefined)){if(dataType4 == "number" || dataType4 == "boolean"){coerced4 = "" + data8;}else if(data8 === null){coerced4 = "";}else {validate11.errors = [{instancePath:instancePath+"/relays/headers/" + i1,schemaPath:"#/properties/relays/properties/headers/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced4 !== undefined){data8 = coerced4;if(data7 !== undefined){data7[i1] = coerced4;}}}var valid5 = _errs21 === errors;if(!valid5){break;}}}else {validate11.errors = [{instancePath:instancePath+"/relays/headers",schemaPath:"#/properties/relays/properties/headers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs19 === errors;}else {var valid4 = true;}if(valid4){if(data6.body !== undefined){const _errs23 = errors;if(errors === _errs23){if(!(Array.isArray(data6.body))){validate11.errors = [{instancePath:instancePath+"/relays/body",schemaPath:"#/properties/relays/properties/body/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs23 === errors;}else {var valid4 = true;}if(valid4){if(data6.query !== undefined){const _errs25 = errors;if(errors === _errs25){if(!(Array.isArray(data6.query))){validate11.errors = [{instancePath:instancePath+"/relays/query",schemaPath:"#/properties/relays/properties/query/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs25 === errors;}else {var valid4 = true;}}}}}}else {validate11.errors = [{instancePath:instancePath+"/relays",schemaPath:"#/properties/relays/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(validate11(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}validate10.errors = vErrors;return errors === 0;}